load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "sendmail",
    srcs = [
        "dialer.go",
        "interface.go",
        "mock.go",
        "mox_mock.go",
        "sendmail.go",
        "service.go",
    ],
    importpath = "github.com/stlimtat/remiges-smtp/internal/sendmail",
    visibility = ["//:__subpackages__"],
    deps = [
        "//internal/config",
        "//internal/dns",
        "//internal/errors",
        "//internal/file",
        "//internal/file_mail",
        "//internal/intmail",
        "//internal/output",
        "//internal/utils",
        "//pkg/dn",
        "//pkg/input",
        "//pkg/pmail",
        "@com_github_mjl__mox//smtp",
        "@com_github_mjl__mox//smtpclient",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_rs_zerolog//:zerolog",
        "@org_golang_x_net//proxy",
        "@org_uber_go_mock//gomock",
    ],
)

go_test(
    name = "sendmail_test",
    srcs = [
        "dialer_test.go",
        "sendmail_test.go",
        "service_test.go",
    ],
    embed = [":sendmail"],
    deps = [
        "//internal/config",
        "//internal/dns",
        "//internal/file",
        "//internal/file_mail",
        "//internal/intmail",
        "//internal/output",
        "//internal/telemetry",
        "//pkg/input",
        "//pkg/pmail",
        "@com_github_mjl__mox//smtpclient",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_net//proxy",
        "@org_uber_go_mock//gomock",
    ],
)

alias(
    name = "go_default_library",
    actual = ":sendmail",
    visibility = ["//:__subpackages__"],
)
