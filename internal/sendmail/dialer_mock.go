// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stlimtat/remiges-smtp/internal/sendmail (interfaces: INetDialer,INetDialerFactory)
//
// Generated by this command:
//
//	mockgen -destination=dialer_mock.go -package=sendmail . INetDialer,INetDialerFactory
//

// Package sendmail is a generated GoMock package.
package sendmail

import (
	net "net"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockINetDialer is a mock of INetDialer interface.
type MockINetDialer struct {
	ctrl     *gomock.Controller
	recorder *MockINetDialerMockRecorder
	isgomock struct{}
}

// MockINetDialerMockRecorder is the mock recorder for MockINetDialer.
type MockINetDialerMockRecorder struct {
	mock *MockINetDialer
}

// NewMockINetDialer creates a new mock instance.
func NewMockINetDialer(ctrl *gomock.Controller) *MockINetDialer {
	mock := &MockINetDialer{ctrl: ctrl}
	mock.recorder = &MockINetDialerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINetDialer) EXPECT() *MockINetDialerMockRecorder {
	return m.recorder
}

// Dial mocks base method.
func (m *MockINetDialer) Dial(network, address string) (net.Conn, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dial", network, address)
	ret0, _ := ret[0].(net.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Dial indicates an expected call of Dial.
func (mr *MockINetDialerMockRecorder) Dial(network, address any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dial", reflect.TypeOf((*MockINetDialer)(nil).Dial), network, address)
}

// MockINetDialerFactory is a mock of INetDialerFactory interface.
type MockINetDialerFactory struct {
	ctrl     *gomock.Controller
	recorder *MockINetDialerFactoryMockRecorder
	isgomock struct{}
}

// MockINetDialerFactoryMockRecorder is the mock recorder for MockINetDialerFactory.
type MockINetDialerFactoryMockRecorder struct {
	mock *MockINetDialerFactory
}

// NewMockINetDialerFactory creates a new mock instance.
func NewMockINetDialerFactory(ctrl *gomock.Controller) *MockINetDialerFactory {
	mock := &MockINetDialerFactory{ctrl: ctrl}
	mock.recorder = &MockINetDialerFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINetDialerFactory) EXPECT() *MockINetDialerFactoryMockRecorder {
	return m.recorder
}

// NewDialer mocks base method.
func (m *MockINetDialerFactory) NewDialer() INetDialer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewDialer")
	ret0, _ := ret[0].(INetDialer)
	return ret0
}

// NewDialer indicates an expected call of NewDialer.
func (mr *MockINetDialerFactoryMockRecorder) NewDialer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewDialer", reflect.TypeOf((*MockINetDialerFactory)(nil).NewDialer))
}
